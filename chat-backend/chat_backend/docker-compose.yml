version: '3.7'
services:
  app:
    build: .
    stdin_open: true
    tty: true


    ports:
      - "8000:8000"
    command:
      - /bin/bash
      - -c
      - |
        python manage.py makemigrations accounts
        python manage.py migrate accounts
        python manage.py makemigrations
        python manage.py migrate
        python manage.py runserver 0.0.0.0:8000

    depends_on:
      - db
      - minio
      - redis
    environment:
      SECRET_KEY: ${SECRET_KEY}
      SQL_HOST: ${SQL_HOST}
      SQL_PASSWORD: ${SQL_PASSWORD}
      SQL_PORT: ${SQL_PORT}
      SQL_USER: ${SQL_USER}
      SQL_DATABASE: ${SQL_DATABASE}
      SQL_ENGINE: ${SQL_ENGINE}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}

  db:
    image: postgres:15
    ports:
      - '8181:5432'
    environment:
      POSTGRES_DB: '${SQL_DATABASE}'
      POSTGRES_USER: '${SQL_USER}'
      POSTGRES_PASSWORD: '${SQL_PASSWORD}'
    volumes:
      - data_db:/var/lib/postgresql/data/

  minio:
    image: 'minio/minio:latest'
    command: 'server --console-address ":9001" /data/'
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    volumes:
      - '~/data/minio:/data'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://localhost:9000/minio/health/live'
      interval: 30s
      timeout: 20s
      retries: 3
    restart: always
  redis:
    image: redis:latest
    ports:
      - "6379:6379"

volumes:
  data_db: